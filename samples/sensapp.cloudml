deployment model SensApp
provider openstacknova : '' ('endPoint':'http://192.168.1.10:5000/v2.0')
provider awsec2 : ''
provider flexiant : '' ('endPoint':'https://api.sd1.flexiant.net:4442/userapi')

types{
	vm ML{
		provider: flexiant
		group: 'sensapp',  securityGroup: 'SensApp', sshKey: 'cloudml'
		location: 'eu-west-1b', os: 'ubuntu'
		os64  core: 2..,  ram: 1000..,  storage: 50..			
		provided host mlProvided: offers: ('OS':'Ubuntu')
		properties: ('something':'something') ('a':'ab')
	}
	
	vm SL{
		provider: flexiant, imageID:'Ubuntu-SINTEF'
		group: 'sensapp',  securityGroup: 'SensApp', sshKey: 'cloudml'
		location: 'eu-west-1b', os: 'ubuntu'
		os64  core: 2..,  ram: 1000..,  storage: 50..			
		provided host slProvided
	}
	
	internal component MongoDB {
		required host sl
		provided communication mongoDBProvided
		resource NoName{
			download: 'wget -P ~ http://cloudml.org/scripts/linux/ubuntu/mongoDB/install_mongoDB.sh'
			install: 'cd ~; sudo bash install_mongoDB.sh'
		}  
	}
	internal component SensApp {
		provided communication restProvided 
		required communication mongoDBRequired
		required host scRequired
		resource NoName{
			download: 'wget -P ~ http://github.com/downloads/SINTEF-9012/sensapp/sensapp.war; wget -P ~ http://cloudml.org/scripts/linux/ubuntu/sensapp/install_start_sensapp.sh'
			install: 'cd ~; sudo bash install_start_sensapp.sh'
		}
	}
	internal component JettySC {
		provided host sc
		required host ml
		resource NoName{
			download: 'wget -P ~ http://cloudml.org/scripts/linux/ubuntu/jetty/install_jetty.sh'
			install: 'cd ~; sudo bash install_jetty.sh'
			stop: 'sudo service jetty stop'
		}
	}
	internal component SensAppAdmin {
		required communication restRequired: port:8080
		required host scRequired
	}
	communication SensAppAdminSensApp {
		from SensAppAdmin.restRequired to SensApp.restProvided
		resource NoName{
			download: 'wget -P ~ http://cloudml.org/scripts/linux/ubuntu/sensappAdmin/configure_sensappadmin.sh'
			install: 'cd ~; sudo bash configure_sensappadmin.sh'
		}
	}
	communication SensAppMangoDB {from SensApp.mongoDBRequired to MongoDB.mongoDBProvided}
}
instances{
	vm sl1 typed SL
	vm ml1 typed ML
	internal component jettySC1 typed JettySC
	internal component sensApp1 typed SensApp
	internal component mangoDB1 typed MongoDB
	internal component jettySC2 typed JettySC
	internal component sensAppAdmin1 typed SensAppAdmin
	connect sensAppAdmin1.restRequired to sensApp1.restProvided typed SensAppAdminSensApp
	connect sensApp1.mongoDBRequired to mangoDB1.mongoDBProvided typed SensAppMangoDB 
	host jettySC1.ml on ml1.mlProvided
	host jettySC2.ml on sl1.slProvided
	host sensApp1.scRequired on jettySC1.sc
	host sensAppAdmin1.scRequired on jettySC2.sc
	host mangoDB1.sl on ml1.mlProvided
}


