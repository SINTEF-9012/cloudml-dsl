/*
* generated by Xtext
*/
grammar InternalCloudML;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.cloudml.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.cloudml.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.cloudml.dsl.services.CloudMLGrammarAccess;

}

@parser::members {

 	private CloudMLGrammarAccess grammarAccess;
 	
    public InternalCloudMLParser(TokenStream input, CloudMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "CloudMLRoot";	
   	}
   	
   	@Override
   	protected CloudMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCloudMLRoot
entryRuleCloudMLRoot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCloudMLRootRule()); }
	 iv_ruleCloudMLRoot=ruleCloudMLRoot 
	 { $current=$iv_ruleCloudMLRoot.current; } 
	 EOF 
;

// Rule CloudMLRoot
ruleCloudMLRoot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='model' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCloudMLRootAccess().getModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCloudMLRootAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCloudMLRootRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCloudMLRootAccess().getProvidersProviderCSParserRuleCall_2_0()); 
	    }
		lv_providers_2_0=ruleProviderCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudMLRootRule());
	        }
       		add(
       			$current, 
       			"providers",
        		lv_providers_2_0, 
        		"ProviderCS");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='components' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCloudMLRootAccess().getComponentsKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCloudMLRootAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCloudMLRootAccess().getVmsVMCSParserRuleCall_5_0_0()); 
	    }
		lv_vms_5_0=ruleVMCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudMLRootRule());
	        }
       		add(
       			$current, 
       			"vms",
        		lv_vms_5_0, 
        		"VMCS");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCloudMLRootAccess().getInternalComponentsInternalComponentCSParserRuleCall_5_1_0()); 
	    }
		lv_internalComponents_6_0=ruleInternalComponentCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudMLRootRule());
	        }
       		add(
       			$current, 
       			"internalComponents",
        		lv_internalComponents_6_0, 
        		"InternalComponentCS");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCloudMLRootAccess().getExternalComponentsExternalComponentCSParserRuleCall_5_2_0()); 
	    }
		lv_externalComponents_7_0=ruleExternalComponentCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudMLRootRule());
	        }
       		add(
       			$current, 
       			"externalComponents",
        		lv_externalComponents_7_0, 
        		"ExternalComponentCS");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getCloudMLRootAccess().getRelationshipsRelationshipCSParserRuleCall_6_0()); 
	    }
		lv_relationships_8_0=ruleRelationshipCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudMLRootRule());
	        }
       		add(
       			$current, 
       			"relationships",
        		lv_relationships_8_0, 
        		"RelationshipCS");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCloudMLRootAccess().getRightCurlyBracketKeyword_7());
    }
	otherlv_10='instances' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCloudMLRootAccess().getInstancesKeyword_8());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCloudMLRootAccess().getLeftCurlyBracketKeyword_9());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCloudMLRootAccess().getComponentInstancesInternalComponentInstanceCSParserRuleCall_10_0_0()); 
	    }
		lv_componentInstances_12_0=ruleInternalComponentInstanceCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudMLRootRule());
	        }
       		add(
       			$current, 
       			"componentInstances",
        		lv_componentInstances_12_0, 
        		"InternalComponentInstanceCS");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCloudMLRootAccess().getComponentInstancesExternalComponentInstanceCSParserRuleCall_10_1_0()); 
	    }
		lv_componentInstances_13_0=ruleExternalComponentInstanceCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudMLRootRule());
	        }
       		add(
       			$current, 
       			"componentInstances",
        		lv_componentInstances_13_0, 
        		"ExternalComponentInstanceCS");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getCloudMLRootAccess().getRelationshipInstancesRelationshipInstanceCSParserRuleCall_11_0()); 
	    }
		lv_relationshipInstances_14_0=ruleRelationshipInstanceCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloudMLRootRule());
	        }
       		add(
       			$current, 
       			"relationshipInstances",
        		lv_relationshipInstances_14_0, 
        		"RelationshipInstanceCS");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCloudMLRootAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleProviderCS
entryRuleProviderCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProviderCSRule()); }
	 iv_ruleProviderCS=ruleProviderCS 
	 { $current=$iv_ruleProviderCS.current; } 
	 EOF 
;

// Rule ProviderCS
ruleProviderCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='provider' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProviderCSAccess().getProviderKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProviderCSAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProviderCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProviderCSAccess().getColonKeyword_2());
    }
(
(
		lv_credentials_3_0=RULE_STRING
		{
			newLeafNode(lv_credentials_3_0, grammarAccess.getProviderCSAccess().getCredentialsSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProviderCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"credentials",
        		lv_credentials_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleVMCS
entryRuleVMCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVMCSRule()); }
	 iv_ruleVMCS=ruleVMCS 
	 { $current=$iv_ruleVMCS.current; } 
	 EOF 
;

// Rule VMCS
ruleVMCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='vm' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVMCSAccess().getVmKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVMCSAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVMCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVMCSAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVMCSAccess().getProvidedVMPortCSParserRuleCall_3_0()); 
	    }
		lv_provided_3_0=ruleVMPortCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVMCSRule());
	        }
       		add(
       			$current, 
       			"provided",
        		lv_provided_3_0, 
        		"VMPortCS");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVMCSAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleVMPortCS
entryRuleVMPortCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVMPortCSRule()); }
	 iv_ruleVMPortCS=ruleVMPortCS 
	 { $current=$iv_ruleVMPortCS.current; } 
	 EOF 
;

// Rule VMPortCS
ruleVMPortCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getVMPortCSAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVMPortCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleExternalComponentCS
entryRuleExternalComponentCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalComponentCSRule()); }
	 iv_ruleExternalComponentCS=ruleExternalComponentCS 
	 { $current=$iv_ruleExternalComponentCS.current; } 
	 EOF 
;

// Rule ExternalComponentCS
ruleExternalComponentCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='external' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalComponentCSAccess().getExternalKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExternalComponentCSAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalComponentCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalComponentCSAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalComponentCSAccess().getProvidedPortsProvidedPortCSParserRuleCall_3_0()); 
	    }
		lv_providedPorts_3_0=ruleProvidedPortCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalComponentCSRule());
	        }
       		add(
       			$current, 
       			"providedPorts",
        		lv_providedPorts_3_0, 
        		"ProvidedPortCS");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExternalComponentCSAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleProvidedPortCS
entryRuleProvidedPortCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProvidedPortCSRule()); }
	 iv_ruleProvidedPortCS=ruleProvidedPortCS 
	 { $current=$iv_ruleProvidedPortCS.current; } 
	 EOF 
;

// Rule ProvidedPortCS
ruleProvidedPortCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='provided' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProvidedPortCSAccess().getProvidedKeyword_0());
    }
(
(
		lv_isLocal_1_0=	'local' 
    {
        newLeafNode(lv_isLocal_1_0, grammarAccess.getProvidedPortCSAccess().getIsLocalLocalKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvidedPortCSRule());
	        }
       		setWithLastConsumed($current, "isLocal", true, "local");
	    }

)
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getProvidedPortCSAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvidedPortCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvidedPortCSRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getProvidedPortCSAccess().getComponentComponentCrossReference_3_0()); 
	}

)
)?)
;





// Entry rule entryRuleInternalComponentCS
entryRuleInternalComponentCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternalComponentCSRule()); }
	 iv_ruleInternalComponentCS=ruleInternalComponentCS 
	 { $current=$iv_ruleInternalComponentCS.current; } 
	 EOF 
;

// Rule InternalComponentCS
ruleInternalComponentCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='internal' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInternalComponentCSAccess().getInternalKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInternalComponentCSAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInternalComponentCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInternalComponentCSAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalComponentCSAccess().getProvidedPortsProvidedPortCSParserRuleCall_3_0()); 
	    }
		lv_providedPorts_3_0=ruleProvidedPortCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalComponentCSRule());
	        }
       		add(
       			$current, 
       			"providedPorts",
        		lv_providedPorts_3_0, 
        		"ProvidedPortCS");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalComponentCSAccess().getRequiredPortsRequiredPortCSParserRuleCall_4_0()); 
	    }
		lv_requiredPorts_4_0=ruleRequiredPortCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalComponentCSRule());
	        }
       		add(
       			$current, 
       			"requiredPorts",
        		lv_requiredPorts_4_0, 
        		"RequiredPortCS");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalComponentCSAccess().getRequiredExecutionPlatformRequiredExecutionPlatformCSParserRuleCall_5_0()); 
	    }
		lv_requiredExecutionPlatform_5_0=ruleRequiredExecutionPlatformCS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalComponentCSRule());
	        }
       		set(
       			$current, 
       			"requiredExecutionPlatform",
        		lv_requiredExecutionPlatform_5_0, 
        		"RequiredExecutionPlatformCS");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInternalComponentCSAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleRequiredPortCS
entryRuleRequiredPortCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequiredPortCSRule()); }
	 iv_ruleRequiredPortCS=ruleRequiredPortCS 
	 { $current=$iv_ruleRequiredPortCS.current; } 
	 EOF 
;

// Rule RequiredPortCS
ruleRequiredPortCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='required' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequiredPortCSAccess().getRequiredKeyword_0());
    }
(
(
		lv_isMandatory_1_0=	'mandatory' 
    {
        newLeafNode(lv_isMandatory_1_0, grammarAccess.getRequiredPortCSAccess().getIsMandatoryMandatoryKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredPortCSRule());
	        }
       		setWithLastConsumed($current, "isMandatory", true, "mandatory");
	    }

)
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getRequiredPortCSAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredPortCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredPortCSRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getRequiredPortCSAccess().getComponentComponentCrossReference_3_0()); 
	}

)
)?)
;





// Entry rule entryRuleRequiredExecutionPlatformCS
entryRuleRequiredExecutionPlatformCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequiredExecutionPlatformCSRule()); }
	 iv_ruleRequiredExecutionPlatformCS=ruleRequiredExecutionPlatformCS 
	 { $current=$iv_ruleRequiredExecutionPlatformCS.current; } 
	 EOF 
;

// Rule RequiredExecutionPlatformCS
ruleRequiredExecutionPlatformCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='execution' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequiredExecutionPlatformCSAccess().getExecutionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRequiredExecutionPlatformCSAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredExecutionPlatformCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequiredExecutionPlatformCSRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getRequiredExecutionPlatformCSAccess().getOwnerComponentCrossReference_2_0()); 
	}

)
)?)
;





// Entry rule entryRuleRelationshipCS
entryRuleRelationshipCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationshipCSRule()); }
	 iv_ruleRelationshipCS=ruleRelationshipCS 
	 { $current=$iv_ruleRelationshipCS.current; } 
	 EOF 
;

// Rule RelationshipCS
ruleRelationshipCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getRelationshipCSAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRelationshipCSAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipCSRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationshipCSAccess().getRequiredPortRequiredPortCrossReference_2_0()); 
	    }
		ruleFqn		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRelationshipCSAccess().getEqualsSignGreaterThanSignKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipCSRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationshipCSAccess().getProvidedPortProvidedPortCrossReference_4_0()); 
	    }
		ruleFqn		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExternalComponentInstanceCS
entryRuleExternalComponentInstanceCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalComponentInstanceCSRule()); }
	 iv_ruleExternalComponentInstanceCS=ruleExternalComponentInstanceCS 
	 { $current=$iv_ruleExternalComponentInstanceCS.current; } 
	 EOF 
;

// Rule ExternalComponentInstanceCS
ruleExternalComponentInstanceCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='external' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalComponentInstanceCSAccess().getExternalKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExternalComponentInstanceCSAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalComponentInstanceCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalComponentInstanceCSAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalComponentInstanceCSRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getExternalComponentInstanceCSAccess().getTypeExternalComponentCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleInternalComponentInstanceCS
entryRuleInternalComponentInstanceCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternalComponentInstanceCSRule()); }
	 iv_ruleInternalComponentInstanceCS=ruleInternalComponentInstanceCS 
	 { $current=$iv_ruleInternalComponentInstanceCS.current; } 
	 EOF 
;

// Rule InternalComponentInstanceCS
ruleInternalComponentInstanceCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='internal' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInternalComponentInstanceCSAccess().getInternalKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInternalComponentInstanceCSAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInternalComponentInstanceCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInternalComponentInstanceCSAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInternalComponentInstanceCSRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getInternalComponentInstanceCSAccess().getTypeInternalComponentCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleRelationshipInstanceCS
entryRuleRelationshipInstanceCS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationshipInstanceCSRule()); }
	 iv_ruleRelationshipInstanceCS=ruleRelationshipInstanceCS 
	 { $current=$iv_ruleRelationshipInstanceCS.current; } 
	 EOF 
;

// Rule RelationshipInstanceCS
ruleRelationshipInstanceCS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getRelationshipInstanceCSAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipInstanceCSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRelationshipInstanceCSAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipInstanceCSRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getRelationshipInstanceCSAccess().getTypeRelationshipCrossReference_2_0()); 
	}

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRelationshipInstanceCSAccess().getColonKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipInstanceCSRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationshipInstanceCSAccess().getRequiredPortInstanceRequiredPortInstanceCrossReference_4_0()); 
	    }
		ruleFqn		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='=>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRelationshipInstanceCSAccess().getEqualsSignGreaterThanSignKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipInstanceCSRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationshipInstanceCSAccess().getProvidedPortInstanceProvidedPortInstanceCrossReference_6_0()); 
	    }
		ruleFqn		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFqn
entryRuleFqn returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFqnRule()); } 
	 iv_ruleFqn=ruleFqn 
	 { $current=$iv_ruleFqn.current.getText(); }  
	 EOF 
;

// Rule Fqn
ruleFqn returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFqnAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFqnAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getFqnAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


