/*
* generated by Xtext
*/
package org.cloudml.dsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.cloudml.dsl.services.CloudMLGrammarAccess;

public class CloudMLParser extends AbstractContentAssistParser {
	
	@Inject
	private CloudMLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.cloudml.dsl.ui.contentassist.antlr.internal.InternalCloudMLParser createParser() {
		org.cloudml.dsl.ui.contentassist.antlr.internal.InternalCloudMLParser result = new org.cloudml.dsl.ui.contentassist.antlr.internal.InternalCloudMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getCloudMLRootAccess().getAlternatives_5(), "rule__CloudMLRoot__Alternatives_5");
					put(grammarAccess.getCloudMLRootAccess().getAlternatives_10(), "rule__CloudMLRoot__Alternatives_10");
					put(grammarAccess.getCloudMLRootAccess().getGroup(), "rule__CloudMLRoot__Group__0");
					put(grammarAccess.getProviderCSAccess().getGroup(), "rule__ProviderCS__Group__0");
					put(grammarAccess.getVMCSAccess().getGroup(), "rule__VMCS__Group__0");
					put(grammarAccess.getExternalComponentCSAccess().getGroup(), "rule__ExternalComponentCS__Group__0");
					put(grammarAccess.getProvidedPortCSAccess().getGroup(), "rule__ProvidedPortCS__Group__0");
					put(grammarAccess.getInternalComponentCSAccess().getGroup(), "rule__InternalComponentCS__Group__0");
					put(grammarAccess.getRequiredPortCSAccess().getGroup(), "rule__RequiredPortCS__Group__0");
					put(grammarAccess.getRequiredExecutionPlatformCSAccess().getGroup(), "rule__RequiredExecutionPlatformCS__Group__0");
					put(grammarAccess.getRelationshipCSAccess().getGroup(), "rule__RelationshipCS__Group__0");
					put(grammarAccess.getExternalComponentInstanceCSAccess().getGroup(), "rule__ExternalComponentInstanceCS__Group__0");
					put(grammarAccess.getInternalComponentInstanceCSAccess().getGroup(), "rule__InternalComponentInstanceCS__Group__0");
					put(grammarAccess.getRelationshipInstanceCSAccess().getGroup(), "rule__RelationshipInstanceCS__Group__0");
					put(grammarAccess.getFqnAccess().getGroup(), "rule__Fqn__Group__0");
					put(grammarAccess.getFqnAccess().getGroup_1(), "rule__Fqn__Group_1__0");
					put(grammarAccess.getCloudMLRootAccess().getNameAssignment_1(), "rule__CloudMLRoot__NameAssignment_1");
					put(grammarAccess.getCloudMLRootAccess().getProvidersAssignment_2(), "rule__CloudMLRoot__ProvidersAssignment_2");
					put(grammarAccess.getCloudMLRootAccess().getVmsAssignment_5_0(), "rule__CloudMLRoot__VmsAssignment_5_0");
					put(grammarAccess.getCloudMLRootAccess().getInternalComponentsAssignment_5_1(), "rule__CloudMLRoot__InternalComponentsAssignment_5_1");
					put(grammarAccess.getCloudMLRootAccess().getExternalComponentsAssignment_5_2(), "rule__CloudMLRoot__ExternalComponentsAssignment_5_2");
					put(grammarAccess.getCloudMLRootAccess().getRelationshipsAssignment_6(), "rule__CloudMLRoot__RelationshipsAssignment_6");
					put(grammarAccess.getCloudMLRootAccess().getComponentInstancesAssignment_10_0(), "rule__CloudMLRoot__ComponentInstancesAssignment_10_0");
					put(grammarAccess.getCloudMLRootAccess().getComponentInstancesAssignment_10_1(), "rule__CloudMLRoot__ComponentInstancesAssignment_10_1");
					put(grammarAccess.getCloudMLRootAccess().getRelationshipInstancesAssignment_11(), "rule__CloudMLRoot__RelationshipInstancesAssignment_11");
					put(grammarAccess.getProviderCSAccess().getNameAssignment_1(), "rule__ProviderCS__NameAssignment_1");
					put(grammarAccess.getProviderCSAccess().getCredentialsAssignment_3(), "rule__ProviderCS__CredentialsAssignment_3");
					put(grammarAccess.getVMCSAccess().getNameAssignment_1(), "rule__VMCS__NameAssignment_1");
					put(grammarAccess.getVMCSAccess().getProvidedAssignment_3(), "rule__VMCS__ProvidedAssignment_3");
					put(grammarAccess.getVMPortCSAccess().getNameAssignment(), "rule__VMPortCS__NameAssignment");
					put(grammarAccess.getExternalComponentCSAccess().getNameAssignment_1(), "rule__ExternalComponentCS__NameAssignment_1");
					put(grammarAccess.getExternalComponentCSAccess().getProvidedPortsAssignment_3(), "rule__ExternalComponentCS__ProvidedPortsAssignment_3");
					put(grammarAccess.getProvidedPortCSAccess().getIsLocalAssignment_1(), "rule__ProvidedPortCS__IsLocalAssignment_1");
					put(grammarAccess.getProvidedPortCSAccess().getNameAssignment_2(), "rule__ProvidedPortCS__NameAssignment_2");
					put(grammarAccess.getProvidedPortCSAccess().getComponentAssignment_3(), "rule__ProvidedPortCS__ComponentAssignment_3");
					put(grammarAccess.getInternalComponentCSAccess().getNameAssignment_1(), "rule__InternalComponentCS__NameAssignment_1");
					put(grammarAccess.getInternalComponentCSAccess().getProvidedPortsAssignment_3(), "rule__InternalComponentCS__ProvidedPortsAssignment_3");
					put(grammarAccess.getInternalComponentCSAccess().getRequiredPortsAssignment_4(), "rule__InternalComponentCS__RequiredPortsAssignment_4");
					put(grammarAccess.getInternalComponentCSAccess().getRequiredExecutionPlatformAssignment_5(), "rule__InternalComponentCS__RequiredExecutionPlatformAssignment_5");
					put(grammarAccess.getRequiredPortCSAccess().getIsMandatoryAssignment_1(), "rule__RequiredPortCS__IsMandatoryAssignment_1");
					put(grammarAccess.getRequiredPortCSAccess().getNameAssignment_2(), "rule__RequiredPortCS__NameAssignment_2");
					put(grammarAccess.getRequiredPortCSAccess().getComponentAssignment_3(), "rule__RequiredPortCS__ComponentAssignment_3");
					put(grammarAccess.getRequiredExecutionPlatformCSAccess().getNameAssignment_1(), "rule__RequiredExecutionPlatformCS__NameAssignment_1");
					put(grammarAccess.getRequiredExecutionPlatformCSAccess().getOwnerAssignment_2(), "rule__RequiredExecutionPlatformCS__OwnerAssignment_2");
					put(grammarAccess.getRelationshipCSAccess().getNameAssignment_0(), "rule__RelationshipCS__NameAssignment_0");
					put(grammarAccess.getRelationshipCSAccess().getRequiredPortAssignment_2(), "rule__RelationshipCS__RequiredPortAssignment_2");
					put(grammarAccess.getRelationshipCSAccess().getProvidedPortAssignment_4(), "rule__RelationshipCS__ProvidedPortAssignment_4");
					put(grammarAccess.getExternalComponentInstanceCSAccess().getNameAssignment_1(), "rule__ExternalComponentInstanceCS__NameAssignment_1");
					put(grammarAccess.getExternalComponentInstanceCSAccess().getTypeAssignment_3(), "rule__ExternalComponentInstanceCS__TypeAssignment_3");
					put(grammarAccess.getInternalComponentInstanceCSAccess().getNameAssignment_1(), "rule__InternalComponentInstanceCS__NameAssignment_1");
					put(grammarAccess.getInternalComponentInstanceCSAccess().getTypeAssignment_3(), "rule__InternalComponentInstanceCS__TypeAssignment_3");
					put(grammarAccess.getRelationshipInstanceCSAccess().getNameAssignment_0(), "rule__RelationshipInstanceCS__NameAssignment_0");
					put(grammarAccess.getRelationshipInstanceCSAccess().getTypeAssignment_2(), "rule__RelationshipInstanceCS__TypeAssignment_2");
					put(grammarAccess.getRelationshipInstanceCSAccess().getRequiredPortInstanceAssignment_4(), "rule__RelationshipInstanceCS__RequiredPortInstanceAssignment_4");
					put(grammarAccess.getRelationshipInstanceCSAccess().getProvidedPortInstanceAssignment_6(), "rule__RelationshipInstanceCS__ProvidedPortInstanceAssignment_6");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.cloudml.dsl.ui.contentassist.antlr.internal.InternalCloudMLParser typedParser = (org.cloudml.dsl.ui.contentassist.antlr.internal.InternalCloudMLParser) parser;
			typedParser.entryRuleCloudMLRoot();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CloudMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CloudMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
